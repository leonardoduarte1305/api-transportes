openapi: 3.0.0

info:
  version: "1.0.0"
  title: Api-Transportes

tags:
  - name: "Sedes"
    description: "Descreve os endpoints para o gerenciamento das Sedes"

  - name: "Veiculos"
    description: "Descreve os endpoints para o gerenciamento dos Veiculos"

  - name: "Motoristas"
    description: "Descreve os endpoints para o gerenciamento dos Motoristas"

  - name: "Materiais"
    description: "Descreve os endpoints para o gerenciamento dos Materiais"

  - name: "Destinos"
    description: "Descreve os endpoints para o gerenciamento dos Destinos"

  - name: "Viagens"
    description: "Descreve os endpoints para o gerenciamento das Viagens"

  - name: "Setores"
    description: "Descreve os endpoints para o gerenciamento das Setores"

  - name: "Usuarios"
    description: "Descreve os endpoints para o gerenciamento de Usuarios"

servers:
  - url: "http://localhost:8080/"
    description: "Desenvolvimento local"

paths:
  /sedes:
    post:
      operationId: criarSede
      summary: criarSede
      description: "Cria uma sede com base nos dados fornecidos."
      tags:
        - Sedes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertSede'
      responses:
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sede'
    get:
      operationId: listaTodasAsSedes
      summary: listaTodasAsSedes
      description: "Lista todas as sedes ordenadas por ID."
      tags:
        - Sedes
      responses:
        200:
          description: "Lista de Sedes ordenadas por ID."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sede'
  /sedes/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    put:
      operationId: editarSede
      summary: editarSede
      description: "Altera uma sede com base nos dados fornecidos."
      tags:
        - Sedes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertSede'
      responses:
        201:
          description: "Updated"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sede'
    delete:
      operationId: excluirSede
      summary: excluirSede
      description: "Exclui o registro de uma sede específica. 
          Se esta sede for referenciada em algum Destino ou Viagem ela não será excluída."
      tags:
        - Sedes
      responses:
        200:
          description: "Deleted"
        400:
          description: "Id inválido"
    get:
      operationId: trazSedePorId
      summary: trazSedePorId
      description: "Devolve uma sede específica, selecionando-a pelo seu ID."
      tags:
        - Sedes
      responses:
        200:
          description: "Devolve uma sede específica buscando por ID."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sede'
  /sedes/{id}/inscrever:
    parameters:
      - $ref: '#/components/parameters/id'
    post:
      operationId: inscrever
      summary: inscrever
      description: "Inscreve um ou mais usuarios em uma fila. Quando alguém adiciona como
       Destino uma sede relevante para esse(s) usuario(s), ele(s) recebe(m) notificação por email."
      tags:
        - Sedes
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        200:
          description: "Inscrição feita com sucesso."
  /sedes/{id}/desinscrever:
    parameters:
      - $ref: '#/components/parameters/id'
    post:
      operationId: desinscrever
      summary: desinscrever
      description: "Desinscreve um ou mais usuarios de uma fila. Após ter sua inscricao cancelada, este
      ou estes usuarios não mais receberão notificações referentes à esta sede."
      tags:
        - Sedes
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        200:
          description: "Inscrição feita com sucesso."

  /motoristas:
    post:
      operationId: criarMotorista
      summary: criarMotorista
      description: "Cria um motorista com base nos dados fornecidos."
      tags:
        - Motoristas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AtributosMotorista'
      responses:
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Motorista'
    get:
      operationId: listaTodosMotoristas
      summary: listaTodosMotoristas
      description: "Lista todos os motoristas ordenados por ID."
      tags:
        - Motoristas
      responses:
        200:
          description: "Lista dos motoristas ordenados por ID."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Motorista'
  /motoristas/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    put:
      operationId: editarMotorista
      summary: editarMotorista
      description: "Altera o cadastro de um motorista com base no seu ID e nos dados fornecidos."
      tags:
        - Motoristas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AtributosMotorista'
      responses:
        201:
          description: "Updated"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Motorista'
    delete:
      operationId: excluirMotorista
      summary: excluirMotorista
      description: "Exclui o registro de um motorista específico."
      tags:
        - Motoristas
      responses:
        200:
          description: "Deleted"
        400:
          description: "Id inválido"
    get:
      operationId: trazMotoristaPorId
      summary: trazMotoristaPorId
      description: "Devolve um motorista específico, selecionando-o pelo seu ID."
      tags:
        - Motoristas
      responses:
        200:
          description: "Devolve um motorista específico buscando por ID."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Motorista'

  /veiculos:
    post:
      operationId: criarVeiculo
      summary: criarVeiculo
      description: "Cria um veículo com base nos dados fornecidos."
      tags:
        - Veiculos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertVeiculo'
      responses:
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Veiculo'
    get:
      operationId: listaTodosVeiculos
      summary: listaTodosVeiculos
      description: "Lista todos os veiculos ordenados por ID."
      tags:
        - Veiculos
      responses:
        200:
          description: "Lista dos veiculos ordenados por ID."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Veiculo'
  /veiculos/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    put:
      operationId: editarVeiculo
      summary: editarVeiculo
      description: "Altera o cadastro de um veiculo com base no seu ID e nos dados fornecidos."
      tags:
        - Veiculos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertVeiculo'
      responses:
        201:
          description: "Updated"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Veiculo'
    delete:
      operationId: excluirVeiculo
      summary: excluirVeiculo
      description: "Exclui o registro de um veículo específico."
      tags:
        - Veiculos
      responses:
        200:
          description: "Deleted"
        400:
          description: "Id inválido"
    get:
      operationId: trazVeiculoPorId
      summary: trazVeiculoPorId
      description: "Devolve um veículo específico, selecionando-o pelo seu ID."
      tags:
        - Veiculos
      responses:
        200:
          description: "Devolve um veiculo específico buscando por ID."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Veiculo'

  /materiais:
    post:
      operationId: criarMaterial
      summary: criarMaterial
      description: "Cria uma Material com base nos dados fornecidos."
      tags:
        - Materiais
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertMaterial'
      responses:
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
    get:
      operationId: listaTodosMateriaisCadastrados
      summary: listaTodosMateriaisCadastrados
      description: "Lista todos os materiais cadastrados ordenados por ID."
      tags:
        - Materiais
      responses:
        200:
          description: "Lista dos materiais cadastrados ordenados por ID."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Material'
  /materiais/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    put:
      operationId: editarCadastroMaterial
      summary: editarCadastroMaterial
      description: "Altera o cadastro de um material com base no seu ID e nos dados fornecidos.
          Ao alterar este material ele será alterado em todos os lugares onde ele é utilizado."
      tags:
        - Materiais
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertMaterial'
      responses:
        201:
          description: "Updated"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
    delete:
      operationId: excluirMaterial
      summary: excluirMaterial
      description: "Exclui o registro de um material específico.
          Ao remover este material ele será removido de todos os lugares onde ele é utilizado."
      tags:
        - Materiais
      responses:
        200:
          description: "Deleted"
        400:
          description: "Id inválido"
    get:
      operationId: trazMaterialPorId
      summary: trazMaterialPorId
      description: "Devolve um material específico, selecionando-o pelo seu ID."
      tags:
        - Materiais
      responses:
        200:
          description: "Devolve um material específico buscando por ID."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'

  /destinos:
    post:
      operationId: criarDestino
      summary: criarDestino
      description: "Cria um Destino com base nos dados fornecidos.
          Se o Admin estiver criando o destino ele já será cadastrado como confirmado.
          Se outro usuário estiver cadastrando o destino ele ainda precisará de confirmação."
      tags:
        - Destinos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertDestino'
      responses:
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Destino'
  /destinos/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    put:
      operationId: editarDestino
      summary: editarDestino
      description: "Altera o cadastro de um destino com base no seu ID e nos dados fornecidos."
      tags:
        - Destinos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertDestino'
      responses:
        201:
          description: "Updated"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Destino'
    delete:
      operationId: excluirDestino
      summary: excluirDestino
      description: "Exclui o registro de um destino específico.
          Ao remover este destino ele será removido da Viagem onde ele está registrado."
      tags:
        - Destinos
      responses:
        200:
          description: "Deleted"
        400:
          description: "Id inválido"
    get:
      operationId: trazDestinoPorId
      summary: trazDestinoPorId
      description: "Devolve um destino específico, selecionando-o pelo seu ID."
      tags:
        - Destinos
      responses:
        200:
          description: "Devolve um destino específico buscando por ID."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Destino'
  /destinos/{id}/materiais:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      operationId: trazMateriaisDoDestino
      summary: trazMateriaisDoDestino
      description: "Devolve a lista de materiais deste destino específico."
      tags:
        - Destinos
      responses:
        200:
          description: "Devolve a lista de materiais deste destino específico."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaterialQuantidadeSetor'
  /destinos/{id}/confirmacao:
    parameters:
      - $ref: '#/components/parameters/id'
    post:
      operationId: confirmaDestino
      summary: confirmaDestino
      description: "Confirma um destino."
      tags:
        - Destinos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Confirmacao'
      responses:
        200:
          description: "Destino foi confirmado."

  /viagens:
    post:
      operationId: criarViagem
      summary: criarViagem
      description: "Cria uma Viagem com base nos dados fornecidos."
      tags:
        - Viagens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertViagem'
      responses:
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Viagem'
    get:
      description: "Lista todas as viagens cadastradas ordenadas por ID."
      summary: listaTodasViagens
      operationId: listaTodasViagens
      tags:
        - Viagens
      responses:
        200:
          description: "Lista das viagens cadastradas ordenadas por ID."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Viagem'
  /viagens/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      operationId: trazViagemPorId
      summary: trazViagemPorId
      description: "Devolve uma viagem específica, selecionando-a pelo seu ID."
      tags:
        - Viagens
      responses:
        200:
          description: "Success."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Viagem'
    put:
      operationId: editarViagem
      summary: editarViagem
      description: "Altera o cadastro de uma viagem com base no seu ID e nos dados fornecidos."
      tags:
        - Viagens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertViagem'
      responses:
        201:
          description: "Updated"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Viagem'
    delete:
      operationId: excluirViagem
      summary: excluirViagem
      description: "Exclui o registro de uma viagem específica.
              Aremoção é apenas lógica, o registro continua persistido no banco de dados
              e pode ser consultado apenas utilizando queries contra o banco."
      tags:
        - Viagens
      responses:
        200:
          description: "Deleted"
        400:
          description: "Id inválido"
  /viagens/{id}/destinos:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      operationId: trazDestinosDaViagem
      summary: trazDestinosDaViagem
      description: "Devolve a lista de destinos desta viagem específica."
      tags:
        - Viagens
      responses:
        200:
          description: "Devolve a lista de destinos desta viagem específica."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Destino'
  /viagens/{id}/confirmacao:
    parameters:
      - $ref: '#/components/parameters/id'
    post:
      operationId: confirmaViagem
      summary: confirmaViagem
      description: "Confirma uma viagem e todos os destinos cadastrados até agora."
      tags:
        - Viagens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Confirmacao'
      responses:
        200:
          description: "Viagem foi confirmada."
  /viagens/{id}/encerramento:
    parameters:
      - $ref: '#/components/parameters/id'
    post:
      operationId: encerraViagem
      summary: encerraViagem
      description: "Confirma uma viagem e todos os destinos cadastrados até agora."
      tags:
        - Viagens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Encerramento'
      responses:
        200:
          description: "Viagem foi encerrada."
  /viagens/{id}/exportar:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      operationId: relatorioDeViagem
      summary: relatorioDeViagem
      description: "Devolve um relatório sobre esta viagem específica."
      tags:
        - Viagens
      responses:
        200:
          description: "Conteúdo anexado."
          content:
            application/pdf:
              schema:
                type: object

  /setores:
    post:
      operationId: criarSetor
      summary: criarSetor
      description: "Cria um setor com base nos dados fornecidos."
      tags:
        - Setores
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Setor'
      responses:
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Setor'
    get:
      operationId: listaTodosOsSetores
      summary: listaTodosOsSetores
      description: "Lista todos os setores ordenados por ID."
      tags:
        - Setores
      responses:
        200:
          description: "Accepted"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Setor'

  /usuarios:
    post:
      tags:
        - Usuarios
      summary: Cria um novo usuário
      operationId: criarUsuario
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertUsuario'
        required: true
      responses:
        201:
          description: "Criado"
  /usuarios/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: "O id da entidade que desejamos analisar"
        schema:
          type: string
    delete:
      operationId: excluirUsuario
      summary: excluirUsuario
      description: "Exclui o registro de um usuario específico."
      tags:
        - Usuarios
      responses:
        204:
          description: "Excluido"
        400:
          description: "Id inválido"

components:
  schemas:

    Usuario:
      allOf:
        - $ref: '#/components/schemas/UpsertUsuario'
        - type: object
          properties:
            id:
              type: integer
              description: "Atributo que identifica cada usuário de maneira única."
              example: "22"

    UpsertUsuario:
      type: object
      properties:
        username:
          type: string
          example: "talita01"
        password:
          type: string
          example: "abc123"
        nome:
          type: string
          example: "Talita"
        sobrenome:
          type: string
          example: "da Silva"
        email:
          type: string
          example: "meuemail@gmail.com"
        role:
          type: string
          enum:
            - ADMIN
            - USER
          example: "ADMIN"
      required:
        - email
        - roles
        - username
        - password

    Endereco:
      type: object
      properties:
        rua:
          type: string
          description: "Nome da rua onde a sede está localizada"
          example: "Rua dos Bobos"
        numero:
          type: integer
          description: "Número, complemento à rua"
          example: "1015"
        cep:
          type: string
          description: "CEP da localidade."
          pattern: '\d{5}\-\d{3}'
        cidade:
          type: string
          description: "Nome da cidade onde a sede está localizada"
          example: "Tijucas"
        uf:
          $ref: '#/components/schemas/Uf'
          example: "SC"
      required:
        - rua
        - numero
        - cep
        - cidade
        - uf
    Uf:
      type: string
      enum:
        - RO
        - AC
        - AM
        - RR
        - PA
        - AP
        - TO
        - MA
        - PI
        - CE
        - RN
        - PB
        - PE
        - AL
        - SE
        - BA
        - MG
        - ES
        - RJ
        - SP
        - PR
        - SC
        - RS
        - MS
        - MT
        - GO
        - DF
    AtributosSede:
      type: object
      properties:
        nome:
          type: string
          description: "Nome da sede ou referência à esta sede especificamente."
          example: "DPE 01 - Criciuma."
        observacao:
          type: string
          description: "Uma descrição sobre a sede, ponto de referência ou outra observação qualquer."
          example: "Na Avenida Brasil, depois do shopping ABC."
      required:
        - nome
        - observacao
    UpsertSede:
      allOf:
        - $ref: '#/components/schemas/Endereco'
        - $ref: '#/components/schemas/AtributosSede'
    Sede:
      allOf:
        - $ref: '#/components/schemas/UpsertSede'
        - type: object
          properties:
            id:
              type: integer
              description: "Atributo que identifica cada sede de maneira única."
              example: "56"


    AtributosMotorista:
      type: object
      properties:
        nome:
          type: string
          description: "Nome do motorista."
          example: "João da Silva"
        carteira:
          type: string
          description: "Dados, número, ou tipo da carteira de motorista."
          example: "Categoria B"
        email:
          type: string
          description: "Email do motorista."
          format: email
      required:
        - nome
        - carteira
        - email
    UpsertMotorista:
      allOf:
        - $ref: '#/components/schemas/AtributosMotorista'
    Motorista:
      allOf:
        - $ref: '#/components/schemas/AtributosMotorista'
        - type: object
          properties:
            id:
              type: integer
              description: "Atributo que identifica cada motorista de maneira única."
              example: "22"


    AtributosVeiculo:
      type: object
      properties:
        modelo:
          type: string
          description: "Modelo do veículo."
          example: "Hyundai HR Baú"
        marca:
          type: string
          description: "Marca da montadora do veículo."
          example: "Hyundai"
        placa:
          type: string
          description: "Placa do veículo, atributo único, padrão Mercosul ou padrão brasileiro anterior."
          pattern: '[A-Z]{3}-\d{4}|[A-Z]{3}\d[A-Z]\d{2}'
        ano:
          type: integer
          description: "Ano de fabricação do veículo."
          example: "2020"
        renavan:
          type: number
          description: "Número de identificação do veículo."
          example: "3214569871"
          pattern: '\d{10}'
        tamanho:
          type: string
          description: "Tamanho do veículo."
          example: "3,58m"
      required:
        - modelo
        - marca
        - placa
        - ano
        - renavan
        - tamanho
    UpsertVeiculo:
      allOf:
        - $ref: '#/components/schemas/AtributosVeiculo'
    Veiculo:
      allOf:
        - $ref: '#/components/schemas/UpsertVeiculo'
        - type: object
          properties:
            id:
              type: integer
              description: "Atributo que identifica cada veículo de maneira única."
              example: "102"


    UpsertMaterial:
      type: object
      description: "Cadastra um material no banco de dados. Neste passo ele é apenas cadastrado no banco de dados.
          Para adicionálo em uma sugestão de viagem específica deve-se utilizar o endpoint correto."
      properties:
        nome:
          type: string
          description: "Nome do produto em questão."
          example: "Monitor de 21 polegadas"
        descricao:
          type: string
          description: "Descricao do material a ser transportado."
          example: "Malote de socumentos"
    Material:
      allOf:
        - $ref: '#/components/schemas/UpsertMaterial'
        - type: object
          properties:
            id:
              type: integer
              description: "Atributo que identifica cada material de maneira única."
              example: "188"


    MaterialQuantidadeSetor:
      type: object
      properties:
        materialId:
          type: integer
          description: "Id do material que deve ser transportado."
        quantidade:
          type: integer
          description: "Quantidade do material que deve ser transportado."
        setorDestino:
          type: integer
          description: "Setor onde o materia deve ser entregue na unidade de destino."
    UpsertDestino:
      type: object
      description: "Sede por onde o transporte deve passar e os materiais que ele deve deixar nesta parada."
      properties:
        sedeId:
          type: integer
          description: "Id da sede para onde devem ir os materiais transportados"
        materiaisQntdSetor:
          type: array
          items:
            $ref: '#/components/schemas/MaterialQuantidadeSetor'
            # O status será adicionado automaticamente no backend
            # -> se o ADMIN criar este destino ele terá status = true
            # -> se outro usuário criar este destino ele terá status = false até que o ADMIN confirme
    Destino:
      allOf:
        - $ref: '#/components/schemas/UpsertDestino'
        - type: object
          properties:
            id:
              type: integer
              description: "Atributo que identifica cada destino de maneira única."
              example: "3"
            status:
              $ref: '#/components/schemas/Confirmacao'

    Confirmacao:
      type: object
      properties:
        confirmacao:
          type: string
          description: "Se passado por um ADMIN confirmará ou não a viagem, caso contrário, nada acontece."
          example: "CONFIRMADO"
          enum:
            - CONFIRMADO
            - NAO_CONFIRMADO

    Encerramento:
      type: object
      properties:
        encerrado:
          type: string
          description: "Se passado por um ADMIN encerrará a viagem, caso contrário, nada acontece."
          example: "ENCERRAR"
          enum:
            - ENCERRAR

    UpsertViagem:
      type: object
      description: "Todas as informacoes necessarias para o agendamento de uma viagem"
      required:
        - datetimeSaida
      properties:
        motoristaId:
          type: integer
          description: "Id único que identifica o motorista desta viagem."
        veiculoId:
          type: integer
          description: "Id único que identifica o veiculo usado nesta viagem."
        destinos:
          type: array
          items:
            type: integer
        datetimeSaida:
          type: string
          description: "Data e hora de partida da viagem."
        datetimeVolta:
          type: string
          description: "Data e hora de partida da viagem."
        sede:
          type: integer
          description: "Atributo que identifica a sede de onde parte a viagem."
          example: "32"

    Viagem:
      allOf:
        - $ref: '#/components/schemas/UpsertViagem'
        - type: object
          properties:
            status:
              $ref: '#/components/schemas/Confirmacao'
            encerrado:
              type: string
              description: "Atributo que identifica se a viagem já foi encerrada possibilidades: ENCERRADO ou NAO_ENCERRADO"
              example: "ENCERRADO"
            sede:
              type: integer
              description: "Atributo que identifica a sede de onde parte a viagem."
              example: "32"
            id:
              type: integer
              description: "Atributo que identifica cada viagem de maneira única."
              example: "44"
    Setor:
      type: object
      description: "Todas as informacoes necessarias para o registro de um setor"
      properties:
        id:
          type: integer
          description: "Id único que identifica o setor."
        nome:
          type: string
          description: "Nome do setor."

  responses:
    400:
      description: "Algo de errado aconteceu com a requisicao."
    403:
      description: "Este usuário não tem permissões para executar esta ação."

  parameters:
    id:
      name: id
      in: path
      required: true
      description: "O id da entidade que desejamos analisar"
      schema:
        type: integer

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: [ ]
